@page "/"
@inject BlazorTodoList.Data.Repositories.ITodoRepository repository

<div class="container-fluid">
    <h1>Todo list</h1>
    <div class="row">
        <div class="col">
            <div class="row">
                <div class="col">
                    <input class="form-control" placeholder="What do you need to do?" @bind="newItem" />
                </div>
                <div class="col">
                    <button class="btn btn-primary" @onclick="AddItem">Add</button>
                </div>
            </div>
            <br />

            @if (todos.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th scope="col">Title</th>
                                <th scope="col">Is done</th>
                                <th scope="col"></th>
                            </tr>
                        </thead>
                        @foreach (var item in todos)
                        {
                            <tbody>
                                <tr>
                                    <td>
                                        <div style="@(item.IsDone ? "color: green; text-decoration: line-through;" : "color: black;")">
                                            @item.Title
                                        </div>
                                    </td>
                                    <td>
                                        @if (item.IsDone)
                                        {
                                            <input type="checkbox" checked @onchange="(() => ChangeStatus(item))" />
                                        }
                                        else
                                        {
                                            <input type="checkbox" @onchange="(() => ChangeStatus(item))" />
                                        }
                                    </td>
                                    <td>
                                        <button class="btn btn-sm btn-outline-danger" @onclick="(() => RemoveItem(item.Id))">Remove</button>
                                    </td>
                                </tr>
                            </tbody>
                        }
                    </table>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private IEnumerable<TodoItem> todos = new List<TodoItem>();
    private string newItem;

    protected override void OnInitialized()
    {
        todos = repository.GetAll();
    }

    private void AddItem()
    {
        if (!string.IsNullOrWhiteSpace(newItem))
        {
            repository.Add(newItem);
            newItem = string.Empty;
        }
    }

    private void RemoveItem(int id)
    {
        repository.Delete(id);
    }

    private void ChangeStatus(TodoItem item)
    {
        item.IsDone = !item.IsDone;
        repository.Update(item);
    }
}
